#!/bin/sh

# All this strange PYTHONPATH manipulation is required to run our
# tests using our just built shared library and swig-generated python
# code prior to installation.

# build tree == src tree unless you're doing a VPATH build.  
# If you don't know what a VPATH build is, you're not doing one.  Relax...

prefix=/usr/local
exec_prefix=${prefix}

# Where to look in the build tree for our shared library
libbld=/home/alfayez/workspace/gnuradio_custom_blocks/gr-howto-write-a-block-3.2.2/src/lib
# Where to look in the src tree for swig generated python code
libsrc=/home/alfayez/workspace/gnuradio_custom_blocks/gr-howto-write-a-block-3.2.2/src/lib
# Where to look in the src tree for hand written python code
py=/home/alfayez/workspace/gnuradio_custom_blocks/gr-howto-write-a-block-3.2.2/src/python

# Where to look for installed GNU Radio python modules
# FIXME this is wrong on a distcheck.  We really need to ask gnuradio-core
# where it put its python files.
installed_pythondir=${exec_prefix}/lib64/python2.5/site-packages
installed_pyexecdir=${exec_prefix}/lib64/python2.5/site-packages

PYTHONPATH="$libbld:$libbld/.libs:$libsrc:$py:$installed_pythondir:$installed_pyexecdir:$PYTHONPATH"
#PYTHONPATH="$libbld:$libbld/.libs:$libsrc:$py:$installed_pythondir:$installed_pyexecdir"

export PYTHONPATH

#
# This is the simple part...
# Run everything that matches qa_*.py and return the final result.
#

ok=yes
for file in ./qa_*.py
#for file in ./filter_test_new.py
do
  if ! $file
  then
    ok=no
  fi  
done

if [ $ok = yes ]
then
  exit 0
else
  exit 1
fi
